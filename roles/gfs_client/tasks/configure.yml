---
- name: "Enumerate all Gluster Cluster hosts and add them to Gluster client hosts file"
  become: true
  ansible.builtin.blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: Gluster Cluster Hosts"
    content: "\
      {% for host in groups['gluster'] %}\
      {% if network.lan is defined and hostvars[host].network.gfs is defined %}{{ hostvars[host].network.gfs.lan.ipv4 }}{% else %}{{ hostvars[host].network.gfs.wan.ipv4 }}{% endif %} {{ hostvars[host].network.gfs.fqdn }}

      {% endfor %}"

- name: "Install GlusterFS Client"
  become: true
  ansible.builtin.apt:
    name:
      - "glusterfs-client"
    state: "present"

- name: "Define primary GlusterFS Server for VMs with Hosts"
  ansible.builtin.set_fact:
    gluster_master: "{{ infrastructure.parent }}"
  when:
    - "infrastructure.parent != 'master'"

- name: "Define primary GlusterFS Server for VMs without Hosts"
  ansible.builtin.set_fact:
    gluster_master: "{{ groups['gluster'] | sort | first }}"
  when: "infrastructure.parent == 'master'"

- name: "Define the list of servers"
  ansible.builtin.set_fact:
    gluster_servers: "{{ groups['gluster'] | difference(gluster_master) | join(',') }}"

- name: "Add Gluster Mount Point to /etc/fstab"
  ansible.posix.mount:
    src: "{{ hostvars[gluster_master].network.gfs.fqdn }}:/{{ gfs_vol.volume }}/storage"
    path: "{{ gfs_vol.mountpoint }}"
    fstype: "glusterfs"
    opts: "defaults,_netdev"
    state: "mounted"
  loop: "{{ gfs_mount | default([]) }}"
  loop_control:
    loop_var: gfs_vol
    label: "{{ gfs_vol.volume }}"
