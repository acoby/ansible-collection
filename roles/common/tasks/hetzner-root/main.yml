---
- name: "Install Hetzner-Root Hosting Dependencies"
  ansible.builtin.apt:
    name: "qemu-guest-agent"
    state: "present"

- name: "Configure interface and resolver"
  ansible.builtin.template:
    src: "{{ template.src }}"
    dest: "{{ template.dest }}"
    owner: "{{ template.owner | default('root') }}"
    group: "{{ template.group | default('root') }}"
    mode: "{{ template.mode | default('0644') }}"
    backup: "{{ template.backup | default(omit) }}"
  loop:
    - src: "{{ infrastructure.provider.type }}/network/interfaces.j2"
      dest: "/etc/network/interfaces"
      backup: true
    - src: "{{ infrastructure.provider.type }}/resolv.conf.j2"
      dest: "/etc/resolv.conf"
  loop_control:
    loop_var: template
    label: "{{ template.src }}"
  ignore_errors: "{{ inventory.id is not defined }}"
  register: __configure_interfaces

- name: "Configure ZFS"
  ansible.builtin.include_tasks: "configure_zfs.yml"
  when: "zfs_enabled | bool"

- name: "Check, if grub is installed"
  ansible.builtin.stat:
    path: "/etc/default/grub"
  register: __grub_default

- name: "Switch to old network device name layout"
  when:
    - "__configure_interfaces is changed"
    - "__grub_default.stat.exists"
  block:
    - name: "Switch to old network layout"
      ansible.builtin.lineinfile:
        dest: "/etc/default/grub"
        regexp: "^GRUB_CMDLINE_LINUX="
        line: 'GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"'
      register: _configure_grub

    - name: "Rerun grub-mkconfig"
      ansible.builtin.command: "grub-mkconfig -o /boot/grub/grub.cfg"
      changed_when: true
      when: "_configure_grub is changed"

    - name: "Reboot for networking changes"
      ansible.builtin.reboot:
        msg: "Networking changes found, rebooting"
      when: "reboot_when_required | bool"
